.cabecalho__menu-hamburger {
    width: 24px;
    height: 24px;
    background-image: url("../imagens/Menu.svg");
    background-repeat: no-repeat;
    background-position: center; /*Essa é uma propriedade do background!*/

    display: inline-block; /*Se fosse só inline não permitiria os ajustes de altura!*/
}

.cabecalho {
    background-color: var(--branco);
    display: flex;
    justify-content: space-between; /*Foi cada um pro seu canto*/
    align-items: center; /*Ele alinhou os itens ao centro da linha*/
    position: relative; /*Alteração feita para ajustar o conteúdo que está saindo assim que o checkbox é marcado.
    Position: relative libera outros atributos de posicionamento como top, bottom, left, right*/
}

.container {
    display: flex;
    align-items: center;
}

.container__imagem {
    padding: 1em;
}

.lista-menu {
    display: none; /*Sumiu com aquela lista que ficava aparecendo sem ele! E também não ocupa espaço nenhum*/
    position: absolute;/*Alteração feita para ajustar o conteúdo que está saindo assim que o checkbox é marcado.
    Position: absolute -->permite que você movimente o elemento de acordo com outro que veio antes ou pai  que tenha a position DIFERENTE de static que é a padrão. Então é para ele se movimentar de acordo com o cabeçalho. Ou seja, pro absolute funcionar teve que mexer no position do cabecalho*/
    top: 100%; /*Ele tirou 100% do cabecalho e ficou pra baixo. Se fosse 50% ele estaria com metade da posição dentro do cabecalho!*/
    width: 60%; /*É igual ao 60vw, para aumentar a largura até o coração*/
}

.container__botao:checked ~ .lista-menu {
    display: block; /*Agora quando clica aparece a lista! E quando clica dnv some com ela. :checked é uma pseudo classe, assim como :hover
    O ~ é como se fosse um combinador css. Ele vai procurar outro elemento que vem em seguida do de antes. É tipo uma condicional do javascript
    SE o container__botão estiver checked ele vai procurar outro que venha depois dele que tenha a classe lista-menu e vai botar DISPLAY:BLOCK nele, se não tivesse nenhuma com o lista-menu ele faria NADA*/
}

.lista-menu__titulo, .lista-menu__item {
    padding: 1em;
    background-color: var(--branco);

}

.lista-menu__titulo {
    color: var(--laranja);
    font-weight: 700;
    
}

.lista-menu__link {
    background: var(--azul-degrade);
    -webkit-background-clip: text; /*Para funcionar em outros tipos de navegadores.*/
    -webkit-text-fill-color: transparent;
    background-clip: text; /*Isso foi copiado e colado do Figma, para deixar a cor desse jeito.*/
    text-transform: uppercase;
    text-decoration: none;
}

.container__botao {
    display: none; /*Para sumir aquela caixa de seleção, ela ainda tá ali e não tá ocupando espaço no css*/
}

.container__titulo {
    display: none; /*Para sumir e só apareccer qunado a largura for 1024*/
}

.opcoes {
    display: none; /*Para sumir e só apareccer qunado a largura for 1024*/
}

@media screen and (min-width: 1024px) { /*Tem como fazer sem colocar o screen, mas ele é um media type. Quando o mínimo da largura for 1024px*/
    .container__titulo, .container__titulo--negrito {
        font-family: var(--fonte-secundaria);
        font-size: 30px;
    }

    .container__titulo {
        font-weight: 400;
        display: block;
    }

    .container__titulo--negrito {
        font-weight: 700;
    }

    .opcoes {
        display: flex;
    }

    .opcoes__item {
        padding: 0 1em;
        text-transform: uppercase;
    }

    .opcoes__link {
        text-decoration: none;
        color: var(--preto);
    }

    .container__imagem--transparente{
        display: none; /*Pra sumir o coração*/
    }

    .cabecalho__menu-hamburger {
        display: none;
    }
}